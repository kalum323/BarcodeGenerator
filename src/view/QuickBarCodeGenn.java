/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import connection.DBConnection;
import controller.Controller;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import model.ImgModel;
import net.sf.jasperreports.engine.JRException;

/**
 *
 * @author Kalum
 */
public class QuickBarCodeGenn extends java.awt.Dialog {

    /**
     * Creates new form NewDialog
     */
    private final DefaultTableModel model;
    Connection connection;

    public QuickBarCodeGenn(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        setResizable(false);
        try {
            connection = DBConnection.getDBConnection().getConnection();
        } catch (SQLException ex) {
            Logger.getLogger(QuickBarCodeGenn.class.getName()).log(Level.SEVERE, null, ex);
        }
        model = (DefaultTableModel) producttable.getModel();

    }

    public QuickBarCodeGenn(java.awt.Frame parent, boolean modal, ImgModel imgModel) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        setResizable(false);
        model = (DefaultTableModel) producttable.getModel();
        try {
            connection = DBConnection.getDBConnection().getConnection();
            productNo.setText(imgModel.getProNo());
            searchByProductNo(productNo.getText());
        } catch (SQLException ex) {
            Logger.getLogger(QuickBarCodeGenn.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        productNo = new javax.swing.JTextField();
        noOfPrints = new javax.swing.JTextField();
        printBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        barcodeText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        producttable = new javax.swing.JTable();
        priceText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        descText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        productNo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        productNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productNoActionPerformed(evt);
            }
        });
        productNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                productNoKeyReleased(evt);
            }
        });
        jPanel1.add(productNo);
        productNo.setBounds(10, 50, 170, 28);

        noOfPrints.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        noOfPrints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noOfPrintsActionPerformed(evt);
            }
        });
        jPanel1.add(noOfPrints);
        noOfPrints.setBounds(10, 290, 170, 28);

        printBtn.setText("Print");
        printBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBtnActionPerformed(evt);
            }
        });
        jPanel1.add(printBtn);
        printBtn.setBounds(110, 340, 70, 30);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("No of prints :");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 260, 90, 28);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Bar Code No :");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 80, 90, 28);

        barcodeText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        barcodeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barcodeTextActionPerformed(evt);
            }
        });
        jPanel1.add(barcodeText);
        barcodeText.setBounds(10, 110, 170, 28);

        producttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product No", "Barcode", "Description", "Price"
            }
        ));
        producttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                producttableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(producttable);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(200, 40, 450, 330);

        priceText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        priceText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTextActionPerformed(evt);
            }
        });
        jPanel1.add(priceText);
        priceText.setBounds(10, 230, 170, 28);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Price");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(10, 200, 90, 30);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Product No");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(10, 20, 90, 28);

        descText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        descText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descTextActionPerformed(evt);
            }
        });
        jPanel1.add(descText);
        descText.setBounds(10, 170, 170, 28);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Desc");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(10, 140, 90, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void productNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productNoActionPerformed
        String proNo = this.productNo.getText();
        searchByProductNo(proNo);

    }//GEN-LAST:event_productNoActionPerformed

    private void noOfPrintsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noOfPrintsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noOfPrintsActionPerformed

    private void printBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBtnActionPerformed
        Integer no = Integer.parseInt(noOfPrints.getText());
        ImgModel imgModel = new ImgModel();

        imgModel.setProNo(productNo.getText());
        imgModel.setBarcode(barcodeText.getText());
        imgModel.setBcdesc(descText.getText());
        imgModel.setCost(Float.valueOf(priceText.getText()));
        imgModel.setPrintQty(Integer.parseInt(noOfPrints.getText()));

        Controller controller = new Controller();
        try {
//            System.out.println("createBarcode");
//            controller.createBarcode(imgModel.getBarcode());
            System.out.println("saveBarcode");
            controller.saveBarcode(imgModel);
            System.out.println("viewBarcode");
            controller.viewJasperReport();
        } catch (SQLException | JRException ex) {
            Logger.getLogger(QuickBarCodeGenn.class.getName()).log(Level.SEVERE, null, ex);
        }

        productNo.setText("");
        noOfPrints.setText("");

//        try {
//            createBarcode(no, barcode);
//        } catch (ConfigurationException | BarcodeException | IOException ex) {
//            System.out.println("Erro");
//        }

    }//GEN-LAST:event_printBtnActionPerformed

    private void barcodeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barcodeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_barcodeTextActionPerformed

    private void priceTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTextActionPerformed

    private void productNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productNoKeyReleased
        String proNo = this.productNo.getText();
        searchByProductNo(proNo);
    }//GEN-LAST:event_productNoKeyReleased

    private void producttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_producttableMouseClicked
        Integer selecRow = producttable.getSelectedRow();
//        ImgModel imgModel = new ImgModel();
//        imgModel.setProNo((String) model.getValueAt(selecRow, 0));
//        imgModel.setBarcode((String) model.getValueAt(selecRow, 1));
//        imgModel.setDesc((String) model.getValueAt(selecRow, 2));
//        imgModel.setCost((float) model.getValueAt(selecRow, 3));

//        productNo.setText((String) model.getValueAt(selecRow, 0));
//        barcodeText.setText((String) model.getValueAt(selecRow, 1));
//        descText.setText((String) model.getValueAt(selecRow, 2));
//        priceText.setText(model.getValueAt(selecRow, 3).toString());
        
//        productNo.setText(imgModel.getProNo());
//        barcodeText.setText(imgModel.getBarcode());
//        descText.setText(imgModel.getDesc());
//        priceText.setText(model.getValueAt(selecRow, 3).toString());

        ImgModel imgModel = new ImgModel();
        imgModel.setProNo((String) model.getValueAt(selecRow, 0));
        imgModel.setBarcode((String) model.getValueAt(selecRow, 1));
        imgModel.setBcdesc((String) model.getValueAt(selecRow, 2));
        imgModel.setCost((double) model.getValueAt(selecRow, 3));
        productNo.setText(imgModel.getProNo());
        barcodeText.setText(imgModel.getBarcode());
        descText.setText(imgModel.getBcdesc());
        priceText.setText(model.getValueAt(selecRow, 3).toString());
    }//GEN-LAST:event_producttableMouseClicked

    private void descTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descTextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuickBarCodeGenn dialog = new QuickBarCodeGenn(new java.awt.Frame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

//    public static void createBarcode(Integer no, String barcode) throws ConfigurationException, BarcodeException, BarcodeException, FileNotFoundException, IOException {
//
//        BarcodeUtil util = BarcodeUtil.getInstance();
//        BarcodeGenerator gen = util.createBarcodeGenerator(buildCfg("code39"));
//
//        OutputStream fout = new FileOutputStream(barcode + ".jpg");
//        int resolution = 200;
//        BitmapCanvasProvider canvas = new BitmapCanvasProvider(
//                fout, "image/jpeg", resolution, BufferedImage.TYPE_BYTE_BINARY, false, 0);
//
//        gen.generateBarcode(canvas, barcode);
//        canvas.finish();
//
////            File file=new File("E:\\image.png");
////            File file = new File("D:\\" + barcode + "_" + i + ".jpg");
//        File file = new File("D:\\My Drive\\MyDrive\\IJSE\\NEW ABSD\\2017-08-19\\Barcode\\" + barcode + ".jpg");
//
//        try {
////            Class.forName("com.mysql.jdbc.Driver");
////            Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/img", "root", "mysql");
////                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
////                Connection con = DriverManger.getconnection("jdbc:sqlserver://ServerIp:1433;user=sa;password=123;databaseName=MrKleanZg;");
////            PreparedStatement ps = (PreparedStatement) con.prepareStatement("insert into img (id,image,image2) values(?,?,?)");
//
//            DBConnection.getDBConnection();
////                String sql = "select * from Brand";
//            String sql = "SET IDENTITY_INSERT img ON; insert into img (id, image, image2) values (?,?,?) SET IDENTITY_INSERT img OFF;" ;
//            PreparedStatement preparedStatement = DBConnection.connection.prepareStatement(sql);
////                ResultSet resultSet = DBConnection.executeQuery(preparedStatement);
//
//            if (no % 2 == 0) {
//                    int no1 = 1;
//                    byte[] image1Bite = convertFileToByte(file);
//                    byte[] image2Bite = convertFileToByte(file);
//                for (int i = 0; i < no / 2; i++) {
////                        System.out.println(image1Bite);
////                    FileInputStream fis1 = new FileInputStream(file);
//                    preparedStatement.setInt(1, no1++);
//                    preparedStatement.setBytes(2, image1Bite);
//                    preparedStatement.setBytes(3, image2Bite);
////                    preparedStatement.setBinaryStream(2, fis, (int) file.length());
////                    preparedStatement.setBinaryStream(3, fis1, (int) file.length());
//                    preparedStatement.executeUpdate();                    
//                }
//            } else {
//                int val = no / 2;
//                val++;
//                System.out.println(val);
//                for (int i = 0; i < val; i++) {
//                    System.out.println(val);
//                    FileInputStream fis = new FileInputStream(file);
//                    FileInputStream fis1 = new FileInputStream(file);
//                    preparedStatement.setInt(1, 0);
//                    preparedStatement.setBinaryStream(2, fis, (int) file.length());
//                    preparedStatement.setBinaryStream(3, fis1, (int) file.length());
//                    preparedStatement.executeUpdate();
//                }
//            }
//            System.out.println("Save success DB...");
//            String reportPath = "C:\\Users\\Kalum\\JaspersoftWorkspace\\sun_queen\\Barcode\\barcode.jrxml";
//            JasperReport jasperReport = JasperCompileManager.compileReport(reportPath);
//            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, null, DBConnection.connection);
//            JasperViewer.viewReport(jasperPrint);
//            preparedStatement.close();
////            fis.close();
////            con.close();
//
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
////            File file = new File(barcode + "_" + i + ".jpg");
//
////            FileInputStream fileInput = new FileInputStream(file);
////            OutputBlob blobOutput = new OutputBlob(fileInput, file.length());
////            Session session = HibernateUtil.getSessionFactory().openSession();
////            session.beginTransaction();
////            Img images = new Img();
////            images.setImage(fis);
////            session.save(images);
////            session.getTransaction().commit();
//        System.out.println("Save success...");
////        File imagePath = new File(pathFolder);
////        Session session = HibernateUtil.getSessionFactory().openSession();
////        session.beginTransaction();
////        ImageModel image = new ImageModel();
////        image.setImg((Blob) imagePath);
////        session.save(image);
////        session.getTransaction().commit();
////        System.out.println("Save success...");
//    }
//
//    private static Configuration buildCfg(String type) {
//        DefaultConfiguration cfg = new DefaultConfiguration("barcode");
//
//        //Bar code type
//        DefaultConfiguration child = new DefaultConfiguration(type);
//        cfg.addChild(child);
//
//        //Human readable text position
//        DefaultConfiguration attr = new DefaultConfiguration("human-readable");
//        DefaultConfiguration subAttr = new DefaultConfiguration("placement");
//        subAttr.setValue("bottom");
//        attr.addChild(subAttr);
//
//        child.addChild(attr);
//        return cfg;
//    }
//
//    public static byte[] convertFileToByte(File file) {
//        FileInputStream fis = null;
//        byte[] biteData = new byte[(int) file.length()];
//        try {
//            fis = new FileInputStream(file);
//            fis.read(biteData);
//            fis.close();
//            System.out.println("thili");
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(QuickBarCodeGenn.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (IOException ex) {
//            Logger.getLogger(QuickBarCodeGenn.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        return biteData;
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField barcodeText;
    private javax.swing.JTextField descText;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField noOfPrints;
    private javax.swing.JTextField priceText;
    private javax.swing.JButton printBtn;
    private javax.swing.JTextField productNo;
    private javax.swing.JTable producttable;
    // End of variables declaration//GEN-END:variables

    private void searchByProductNo(String proNo) {
        try {
            String sql = "select * from productBarCode where prono like '%" + proNo + "%'";
            PreparedStatement preparedStatement = connection.prepareStatement(sql);
            ResultSet resultSet = preparedStatement.executeQuery();
            model.setRowCount(0);
            while (resultSet.next()) {
                Object[] rowdata = {
                    resultSet.getString(1),
                    resultSet.getString(2),
                    resultSet.getString(3),
                    resultSet.getDouble(4)
                    };
                model.addRow(rowdata);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GRNBarcodegenn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
